import telebot
from telebot import types
from flask import Flask, request
import os
from collections import defaultdict

TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")
ARCHIVE_CHAT_ID = "-1003160855229"

bot = telebot.TeleBot(TOKEN, threaded=True)
app = Flask(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}
user_uploads = defaultdict(lambda: defaultdict(list))

# –®–∞–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏
UPLOAD_STEPS = [
    "–û–±—â–µ–µ —Ñ–æ—Ç–æ –ø–æ–º–µ—â–µ–Ω–∏—è",
    "–§–æ—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä–∞",
    "–§–æ—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –°–¢–ú –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è",
    "–§–æ—Ç–æ –º–µ—Å—Ç–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º–æ–π –°–¢–ú",
    "–§–æ—Ç–æ (–ì–†–£)",
    "–§–æ—Ç–æ –∫–æ—Ç–ª–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º–æ–π –°–¢–ú",
    "–§–æ—Ç–æ –≥–∞–∑–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    "–§–æ—Ç–æ —Ç–æ—á–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è 220–í",
    "–§–æ—Ç–æ –º–µ—Å—Ç–∞ –ø—Ä–æ–∫–ª–∞–¥–∫–∏ –∫–∞–±–µ–ª–µ–π",
    "–§–æ—Ç–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–≤–µ—Ä–µ–π —Å–Ω–∞—Ä—É–∂–∏",
    "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ /OK –∏ /next
def get_step_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row("/OK", "/next", "/cancel")
    return keyboard

# –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
@bot.message_handler(commands=['start'])
def cmd_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /photo –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
@bot.message_handler(commands=['info'])
def cmd_info(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏.")

# –ö–æ–º–∞–Ω–¥–∞ /photo
@bot.message_handler(commands=['photo'])
def cmd_photo(message):
    user_id = message.from_user.id
    user_states[user_id] = {"step": 0, "active": True}
    bot.send_message(message.chat.id, f"üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ {UPLOAD_STEPS[0]}", reply_markup=get_step_keyboard())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    user_id = message.from_user.id
    if user_id not in user_states or not user_states[user_id]["active"]:
        return

    step = user_states[user_id]["step"]
    if step >= len(UPLOAD_STEPS):
        return

    file_id = message.photo[-1].file_id
    user_uploads[user_id][UPLOAD_STEPS[step]].append(file_id)
    bot.send_message(message.chat.id, f"‚úÖ –§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ –¥–ª—è: {UPLOAD_STEPS[step]}")

# –ö–Ω–æ–ø–∫–∏ /OK, /next, /cancel
@bot.message_handler(commands=['OK', 'next', 'cancel'])
def handle_buttons(message):
    user_id = message.from_user.id
    if user_id not in user_states or not user_states[user_id]["active"]:
        return

    cmd = message.text.lower()
    step = user_states[user_id]["step"]

    if cmd == "/cancel":
        user_states[user_id]["active"] = False
        user_uploads[user_id].clear()
        bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    user_states[user_id]["step"] += 1
    step = user_states[user_id]["step"]

    if step >= len(UPLOAD_STEPS):
        user_states[user_id]["active"] = False
        send_archive(user_id)
        send_summary(message.chat.id, user_id)
        return

    bot.send_message(message.chat.id, f"üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ {UPLOAD_STEPS[step]}", reply_markup=get_step_keyboard())

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∞—Ä—Ö–∏–≤
def send_archive(user_id):
    for step_name, files in user_uploads[user_id].items():
        for file_id in files:
            try:
                bot.send_photo(ARCHIVE_CHAT_ID, file_id, caption=f"{step_name}")
            except Exception as e:
                print(f"[archive error] {e}")

# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_summary(chat_id, user_id):
    summary = "üìë –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –§–æ—Ç–æ –ø–æ —à–∞–≥–∞–º:\n"
    for step_name in UPLOAD_STEPS:
        count = len(user_uploads[user_id][step_name])
        summary += f"{step_name}: {count} —Ñ–æ—Ç–æ\n"
    bot.send_message(chat_id, summary, reply_markup=types.ReplyKeyboardRemove())
    user_uploads[user_id].clear()

# Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Flask
@app.route(f"/{TOKEN}", methods=['POST'])
def webhook():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return '', 200

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
