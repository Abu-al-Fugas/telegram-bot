import os
from datetime import datetime
from flask import Flask, request
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# ========== –ù–ê–°–¢–†–û–ô–ö–ò ==========
TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
ARCHIVE_CHAT_ID = os.environ.get("ARCHIVE_CHAT_ID", "-1003160855229")

bot = telebot.TeleBot(TOKEN, parse_mode=None)
app = Flask(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ: –∫–ª—é—á = (chat_id, thread_id, user_id)
user_state = {}

UPLOAD_STEPS = [
    "–û–±—â–µ–µ —Ñ–æ—Ç–æ –ø–æ–º–µ—â–µ–Ω–∏—è",
    "–§–æ—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä–∞",
    "–§–æ—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –°–¢–ú –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è",
    "–§–æ—Ç–æ –º–µ—Å—Ç–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º–æ–π –°–¢–ú",
    "–§–æ—Ç–æ (–ì–†–£)",
    "–§–æ—Ç–æ –∫–æ—Ç–ª–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º–æ–π –°–¢–ú",
    "–§–æ—Ç–æ –≥–∞–∑–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    "–§–æ—Ç–æ —Ç–æ—á–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è 220–í",
    "–§–æ—Ç–æ –º–µ—Å—Ç–∞ –ø—Ä–æ–∫–ª–∞–¥–∫–∏ –∫–∞–±–µ–ª–µ–π",
    "–§–æ—Ç–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–≤–µ—Ä–µ–π —Å–Ω–∞—Ä—É–∂–∏",
    "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
]

# ========== HELPERS ==========
def make_key_from_message(message):
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª—é—á —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ message (—É—á–∏—Ç—ã–≤–∞–µ—Ç thread_id, –º–æ–∂–µ—Ç –±—ã—Ç—å None)."""
    thread_id = getattr(message, "message_thread_id", None)
    return (message.chat.id, thread_id, message.from_user.id)

def make_key_from_callback(call):
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª—é—á —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ callback (call.message –º–æ–∂–µ—Ç –∏–º–µ—Ç—å thread_id)."""
    thread_id = getattr(call.message, "message_thread_id", None)
    return (call.message.chat.id, thread_id, call.from_user.id)

def send_message(chat_id, text, reply_markup=None, thread_id=None):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç Message"""
    return bot.send_message(chat_id, text, reply_markup=reply_markup, message_thread_id=thread_id)

def send_file(chat_id, file_type, file_id, caption=None):
    if file_type == "photo":
        bot.send_photo(chat_id, file_id, caption=caption)
    elif file_type == "document":
        bot.send_document(chat_id, file_id, caption=caption)
    elif file_type == "video":
        bot.send_video(chat_id, file_id, caption=caption)

# ========== INLINE –ö–õ–ê–í–ò–ê–¢–£–†–´ ==========
def upload_inline_keyboard():
    kb = InlineKeyboardMarkup(row_width=3)
    kb.add(
        InlineKeyboardButton("‚úÖ OK", callback_data="upload_ok"),
        InlineKeyboardButton("‚û°Ô∏è Next", callback_data="upload_next"),
        InlineKeyboardButton("‚ùå Cancel", callback_data="upload_cancel")
    )
    return kb

def main_inline_keyboard():
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("‚ÑπÔ∏è Info", callback_data="cmd_info"),
        InlineKeyboardButton("üì∏ Photo", callback_data="cmd_photo"),
        InlineKeyboardButton("‚¨áÔ∏è Download", callback_data="cmd_download"),
        InlineKeyboardButton("üìã Result", callback_data="cmd_result"),
        InlineKeyboardButton("‚ùì Help", callback_data="cmd_help")
    )
    return kb

# ========== –ö–û–ú–ê–ù–î–´ ==========
@bot.message_handler(commands=['start', 'help'])
def start_message(message):
    text = (
        "ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏ –ò–ü–£–ì\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è."
    )
    send_message(message.chat.id, text, reply_markup=main_inline_keyboard(), thread_id=message.message_thread_id)

@bot.message_handler(commands=['photo'])
def start_upload(message):
    key = make_key_from_message(message)
    send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:", thread_id=message.message_thread_id)
    user_state[key] = {'command': 'await_object'}

# ========== –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–ê ==========
@bot.message_handler(content_types=['text'])
def handle_text(message):
    key = make_key_from_message(message)
    state = user_state.get(key)
    if not state:
        return

    # –í–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞
    if state.get('command') == 'await_object':
        object_id = message.text.strip()
        if not object_id:
            send_message(message.chat.id, "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞.", thread_id=message.message_thread_id)
            return

        steps = [{'name': s, 'files': []} for s in UPLOAD_STEPS]
        user_state[key] = {
            'command': 'upload_steps',
            'object_id': object_id,
            'step_index': 0,
            'steps': steps,
            'chat_id': message.chat.id,
            'thread_id': getattr(message, 'message_thread_id', None),
            'seen_media_groups': set(),          # —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø—Ä–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞—Ö
            'control_message_id': None           # message_id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å)
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏ (–≤ —Ç–µ–º—É –∏–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç)
        msg = send_message(
            message.chat.id,
            f"üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ {steps[0]['name']}",
            reply_markup=upload_inline_keyboard(),
            thread_id=getattr(message, 'message_thread_id', None)
        )
        # –°–æ—Ö—Ä–∞–Ω–∏–º id —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–Ω—Ç—Ä–æ–ª–æ–º
        user_state[key]['control_message_id'] = getattr(msg, 'message_id', None)

# ========== –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–û–í ==========
@bot.message_handler(content_types=['photo', 'document', 'video'])
def handle_files(message):
    """
    –õ–æ–≥–∏–∫–∞:
    - –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞).
    - –ù–ï —à–ª—ë–º "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω".
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –û–î–ò–ù –†–ê–ó:
        - –µ—Å–ª–∏ message.media_group_id –µ—Å—Ç—å ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ñ–∞–π–ª–µ –≥—Ä—É–ø–ø—ã (–ø–æ user_state[...]['seen_media_groups'])
        - –µ—Å–ª–∏ media_group_id –Ω–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ä–∞–∑—É –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é/—Ç–µ–º–µ
    key = make_key_from_message(message)
    state = user_state.get(key)
    if not state or state.get('command') != 'upload_steps':
        return  # –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –¥–æ—Å—Ç–∞—ë–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
    step = state['steps'][state['step_index']]

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ —à–∞–≥
    if message.photo:
        file_id = message.photo[-1].file_id
        step['files'].append({'type': 'photo', 'file_id': file_id})
    elif message.document:
        step['files'].append({'type': 'document', 'file_id': message.document.file_id})
    elif message.video:
        step['files'].append({'type': 'video', 'file_id': message.video.file_id})

    # –†–µ—à–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    mgid = getattr(message, 'media_group_id', None)
    already_seen = state.get('seen_media_groups', set())

    should_send_keyboard = False
    if mgid:
        if mgid not in already_seen:
            should_send_keyboard = True
            already_seen.add(mgid)
            state['seen_media_groups'] = already_seen
    else:
        # –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ñ–∞–π–ª ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–µ—Å–ª–∏ —É–∂–µ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –¥–ª—è —ç—Ç–æ–≥–æ —à–∞–≥–∞)
        # –∑–∞—â–∏—Ç–∏–º—Å—è –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞: –ø—Ä–æ–≤–µ—Ä–∏–º control_message_id
        should_send_keyboard = True

    if should_send_keyboard:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë message_id —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/—É–±—Ä–∞—Ç—å
        msg = send_message(
            state['chat_id'],
            f"üì∏ –®–∞–≥: {step['name']}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=upload_inline_keyboard(),
            thread_id=state.get('thread_id')
        )
        state['control_message_id'] = getattr(msg, 'message_id', None)

# ========== –û–ë–†–ê–ë–û–¢–ö–ê CALLBACK: –∫–æ–º–∞–Ω–¥—ã (cmd_) –∏ upload_ ==========
@bot.callback_query_handler(func=lambda c: c.data and c.data.startswith("cmd_"))
def handle_cmd_callback(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (cmd_info, cmd_photo –∏ —Ç.–¥.)"""
    data = call.data
    key = make_key_from_callback(call)

    # –î–ª—è –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –≤–≤–æ–¥–∞/–¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    if data == "cmd_photo":
        # —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç /photo
        send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:", thread_id=getattr(call.message, 'message_thread_id', None))
        user_state[key] = {'command': 'await_object'}
        bot.answer_callback_query(call.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞")
        return

    # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
    if data == "cmd_info":
        bot.answer_callback_query(call.id, "Info: –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞")
        bot.send_message(call.message.chat.id, "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–µ: (–∑–∞–≥–ª—É—à–∫–∞)", message_thread_id=getattr(call.message, 'message_thread_id', None))
    elif data == "cmd_download":
        bot.answer_callback_query(call.id, "Download: –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞")
        bot.send_message(call.message.chat.id, "‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã: (–∑–∞–≥–ª—É—à–∫–∞)", message_thread_id=getattr(call.message, 'message_thread_id', None))
    elif data == "cmd_result":
        bot.answer_callback_query(call.id, "Result: –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞")
        bot.send_message(call.message.chat.id, "üìã –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: (–∑–∞–≥–ª—É—à–∫–∞)", message_thread_id=getattr(call.message, 'message_thread_id', None))
    elif data == "cmd_help":
        bot.answer_callback_query(call.id, "Help")
        bot.send_message(call.message.chat.id, "‚ùì –ü–æ–º–æ—â—å: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /photo –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –∫–Ω–æ–ø–∫–∏.", message_thread_id=getattr(call.message, 'message_thread_id', None))
    else:
        bot.answer_callback_query(call.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

@bot.callback_query_handler(func=lambda c: c.data and c.data.startswith("upload_"))
def handle_upload_callback(call):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ OK / Next / Cancel ‚Äî –ø–æ callback'–∞–º.
    –í–∞–∂–Ω–æ: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ —Å–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ø–æ key).
    –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü ‚Äî –≤—ã–¥–∞—ë–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.
    """
    key = make_key_from_callback(call)
    state = user_state.get(key)

    if not state or state.get('command') != 'upload_steps':
        # –ï—Å–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ–º
        bot.answer_callback_query(call.id, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞.")
        return

    # –£–±–µ—Ä—ë–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (—á—Ç–æ–±—ã –Ω–µ –Ω–∞–∂–∞–ª–∏ –¥–≤–∞–∂–¥—ã)
    ctrl_mid = state.get('control_message_id')
    if ctrl_mid:
        try:
            bot.edit_message_reply_markup(chat_id=state['chat_id'], message_id=ctrl_mid, reply_markup=None, message_thread_id=state.get('thread_id'))
        except Exception:
            pass  # –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–æ

    if call.data == "upload_ok":
        advance_step(key)
        bot.answer_callback_query(call.id, "–®–∞–≥ –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ")
    elif call.data == "upload_next":
        advance_step(key, skip=True)
        bot.answer_callback_query(call.id, "–®–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω ‚û°Ô∏è")
    elif call.data == "upload_cancel":
        obj = state.get('object_id', '')
        user_state.pop(key, None)
        # –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º/–∑–∞–º–µ–Ω–∏–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
        try:
            bot.edit_message_text(f"‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–∫—Ç–∞ {obj} –æ—Ç–º–µ–Ω–µ–Ω–∞", chat_id=call.message.chat.id, message_id=call.message.message_id, message_thread_id=getattr(call.message, 'message_thread_id', None))
        except Exception:
            # –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            send_message(call.message.chat.id, f"‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–∫—Ç–∞ {obj} –æ—Ç–º–µ–Ω–µ–Ω–∞", thread_id=getattr(call.message, 'message_thread_id', None))
        bot.answer_callback_query(call.id, "–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùå")
    else:
        bot.answer_callback_query(call.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")

# ========== –ü–†–û–ì–†–ï–°–° ==========
def advance_step(key, skip=False):
    """
    –ü—Ä–æ–¥–≤–∏–≥–∞–µ—Ç —à–∞–≥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    –ï—Å–ª–∏ —à–∞–≥–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç ‚Äî –∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∏ –æ—Ç—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    """
    state = user_state.get(key)
    if not state:
        return

    state['step_index'] += 1

    if state['step_index'] >= len(state['steps']):
        # –ó–∞–≤–µ—Ä—à–∏–ª–∏ –≤—Å–µ —à–∞–≥–∏
        object_id = state.get('object_id', '')
        all_steps = state.get('steps', [])
        save_to_archive(object_id, all_steps)

        report = f"‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ #{object_id}\n\n"
        for i, s in enumerate(all_steps, 1):
            report += f"{i}. {s['name']}: {len(s['files'])} —Ñ–∞–π–ª–æ–≤\n"

        send_message(state['chat_id'], report, thread_id=state.get('thread_id'))
        user_state.pop(key, None)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        next_step = state['steps'][state['step_index']]
        msg = send_message(
            state['chat_id'],
            f"üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ {next_step['name']}",
            reply_markup=upload_inline_keyboard(),
            thread_id=state.get('thread_id')
        )
        state['control_message_id'] = getattr(msg, 'message_id', None)
        # –æ—á–∏—â–∞–µ–º seen_media_groups –¥–ª—è –Ω–æ–≤–æ–≥–æ —à–∞–≥–∞, —á—Ç–æ–±—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–æ–≥–ª–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –ø—Ä–∏ –Ω–æ–≤–æ–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–µ
        state['seen_media_groups'] = set()

# ========== –ê–†–•–ò–í ==========
def save_to_archive(object_id, all_steps):
    total_files = sum(len(s['files']) for s in all_steps)
    info = f"üíæ –û–ë–™–ï–ö–¢ #{object_id}\nüìÅ {total_files} —Ñ–∞–π–ª–æ–≤\nüïí {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    send_message(ARCHIVE_CHAT_ID, info)

    for step in all_steps:
        for f in step['files']:
            send_file(ARCHIVE_CHAT_ID, f['type'], f['file_id'])

# ========== WEBHOOK ==========
@app.route('/' + TOKEN, methods=['POST'])
def receive_update():
    update = telebot.types.Update.de_json(request.data.decode('utf-8'))
    bot.process_new_updates([update])
    return "OK", 200

@app.route('/')
def index():
    return "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç", 200

# ========== –ó–ê–ü–£–°–ö ==========
if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    bot.remove_webhook()
    WEBHOOK_URL = f"https://telegram-bot-b6pn.onrender.com/{TOKEN}"
    bot.set_webhook(url=WEBHOOK_URL)
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
