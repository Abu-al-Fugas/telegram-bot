import os
import json
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from flask import Flask, request
from datetime import datetime
import gspread
from google.oauth2.service_account import Credentials
import openpyxl

# ========== –ù–ê–°–¢–†–û–ô–ö–ò ==========
TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
ARCHIVE_CHAT_ID = os.environ.get("ARCHIVE_CHAT_ID", "-1003160855229")
GOOGLE_SHEETS_KEY = os.environ.get("GOOGLE_SHEETS_KEY")

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
user_state = {}
objects_data = {}
object_files = {}  # –•—Ä–∞–Ω–∏—Ç —Ñ–∞–π–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞

# ========== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========
def send_message_with_topic(chat_id, text, message_thread_id=None, reply_markup=None, parse_mode=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º —Ç–µ–º—ã (topic)"""
    try:
        if message_thread_id:
            return bot.send_message(
                chat_id=chat_id,
                message_thread_id=message_thread_id,
                text=text,
                reply_markup=reply_markup,
                parse_mode=parse_mode
            )
        else:
            return bot.send_message(
                chat_id=chat_id,
                text=text,
                reply_markup=reply_markup,
                parse_mode=parse_mode
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return bot.send_message(chat_id, text, reply_markup=reply_markup, parse_mode=parse_mode)

def send_photo_with_topic(chat_id, photo, message_thread_id=None, caption=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ —Å —É—á–µ—Ç–æ–º —Ç–µ–º—ã"""
    try:
        if message_thread_id:
            return bot.send_photo(
                chat_id=chat_id,
                message_thread_id=message_thread_id,
                photo=photo,
                caption=caption
            )
        else:
            return bot.send_photo(
                chat_id=chat_id,
                photo=photo,
                caption=caption
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
        return bot.send_photo(chat_id, photo, caption=caption)

def send_document_with_topic(chat_id, document, message_thread_id=None, caption=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç —Å —É—á–µ—Ç–æ–º —Ç–µ–º—ã"""
    try:
        if message_thread_id:
            return bot.send_document(
                chat_id=chat_id,
                message_thread_id=message_thread_id,
                document=document,
                caption=caption
            )
        else:
            return bot.send_document(
                chat_id=chat_id,
                document=document,
                caption=caption
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        return bot.send_document(chat_id, document, caption=caption)

def send_video_with_topic(chat_id, video, message_thread_id=None, caption=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ —Å —É—á–µ—Ç–æ–º —Ç–µ–º—ã"""
    try:
        if message_thread_id:
            return bot.send_video(
                chat_id=chat_id,
                message_thread_id=message_thread_id,
                video=video,
                caption=caption
            )
        else:
            return bot.send_video(
                chat_id=chat_id,
                video=video,
                caption=caption
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        return bot.send_video(chat_id, video, caption=caption)

# ========== –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –ò–ó EXCEL ==========
def load_objects_from_excel():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã –∏–∑ Excel —Ñ–∞–π–ª–∞"""
    global objects_data
    try:
        workbook = openpyxl.load_workbook('objects.xlsx')
        sheet = workbook.active
        
        objects_dict = {}
        for row in sheet.iter_rows(min_row=2, values_only=True):
            if row[0] is not None:
                obj_number = str(row[0]).strip()
                objects_dict[obj_number] = {
                    'name': row[1] or '',
                    'address': row[2] or '',
                    'status': '–ù–µ –Ω–∞—á–∞—Ç'
                }
        return objects_dict
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Excel: {e}")
        return {}

# ========== GOOGLE SHEETS ==========
def init_google_sheets():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets"""
    try:
        if GOOGLE_SHEETS_KEY:
            creds_dict = json.loads(GOOGLE_SHEETS_KEY)
            creds = Credentials.from_service_account_info(creds_dict)
            client = gspread.authorize(creds)
            return client
        return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets: {e}")
        return None

def update_google_sheets(object_id, status="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω"):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç Google Sheets - –ø–æ–º–µ—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π"""
    try:
        client = init_google_sheets()
        if not client:
            return False
        
        sheet = client.open("–û–±—ä–µ–∫—Ç—ã –ò–ü–£–ì").sheet1
        all_data = sheet.get_all_values()
        
        for i, row in enumerate(all_data, start=1):
            if i == 1:
                continue
                
            if row and str(row[0]).strip() == str(object_id):
                sheet.update_cell(i, 4, status)
                sheet.format(f"D{i}", {
                    "backgroundColor": {
                        "red": 0.7,
                        "green": 0.9, 
                        "blue": 0.7
                    }
                })
                return True
        return False
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google Sheets: {e}")
        return False

# ========== –ê–†–•–ò–í –í TELEGRAM ==========
def save_to_archive(object_id, files, file_types):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤–Ω—ã–π —á–∞—Ç"""
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        type_description = []
        if file_types.get('photos', 0) > 0:
            type_description.append(f"üì∏ {file_types['photos']} —Ñ–æ—Ç–æ")
        if file_types.get('documents', 0) > 0:
            type_description.append(f"üìÑ {file_types['documents']} –¥–æ–∫.")
        if file_types.get('videos', 0) > 0:
            type_description.append(f"üé• {file_types['videos']} –≤–∏–¥–µ–æ")
        
        files_desc = " + ".join(type_description) if type_description else "—Ñ–∞–π–ª—ã"
        
        info_text = f"""
üíæ –û–ë–™–ï–ö–¢ #{object_id}
üìÅ {len(files)} {files_desc}
üïí {datetime.now().strftime('%d.%m.%Y %H:%M')}
        """
        bot.send_message(ARCHIVE_CHAT_ID, info_text.strip())
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤
        for file_info in files:
            try:
                if file_info['type'] == 'photo':
                    bot.send_photo(ARCHIVE_CHAT_ID, file_info['file_id'])
                elif file_info['type'] == 'document':
                    bot.send_document(ARCHIVE_CHAT_ID, file_info['file_id'])
                elif file_info['type'] == 'video':
                    bot.send_video(ARCHIVE_CHAT_ID, file_info['file_id'])
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –≤ –∞—Ä—Ö–∏–≤: {e}")
        
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∞—Ä—Ö–∏–≤: {e}")
        return False

# ========== –ö–õ–ê–í–ò–ê–¢–£–†–´ ==========
def create_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton('/info'),
        KeyboardButton('/upload'),
        KeyboardButton('/download'), 
        KeyboardButton('/processed'),
        KeyboardButton('/help')
    )
    return keyboard

def create_upload_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton('/done'),
        KeyboardButton('/cancel'),
        KeyboardButton('/help')
    )
    return keyboard

def create_processed_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    processed_objects = sorted(object_files.keys())
    buttons = [KeyboardButton(f"üìÅ #{obj}") for obj in processed_objects]
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Ä—è–¥—ã –ø–æ 3 –∫–Ω–æ–ø–∫–∏
    for i in range(0, len(buttons), 3):
        keyboard.add(*buttons[i:i+3])
    
    keyboard.add(KeyboardButton('/help'))
    return keyboard

# ========== –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê ==========
@bot.message_handler(commands=['start', 'help'])
def start_message(message):
    help_text = """
ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏ –ò–ü–£–ì

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–µ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
/upload - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—ä–µ–∫—Ç–∞  
/download - –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã –æ–±—ä–µ–∫—Ç–∞
/processed - –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!
    """
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text=help_text.strip(),
        reply_markup=create_main_keyboard()
    )

@bot.message_handler(commands=['info'])
def ask_info_object(message):
    msg = send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text="üîç –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):",
        reply_markup=create_main_keyboard()
    )
    bot.register_next_step_handler(msg, process_info_object)

def process_info_object(message):
    if message.text.startswith('/'):
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞, –∞ –Ω–µ –∫–æ–º–∞–Ω–¥—É",
            reply_markup=create_main_keyboard()
        )
        return
        
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
    object_ids = [obj_id.strip() for obj_id in message.text.split(',')]
    responses = []
    
    for object_id in object_ids:
        obj_info = objects_data.get(object_id)
        
        if obj_info:
            is_processed = object_id in object_files
            status_icon = "‚úÖ" if is_processed else "‚è≥"
            
            response = f"""
{status_icon} –û–ë–™–ï–ö–¢ #{object_id}
üè¢ {obj_info['name']}
üìç {obj_info['address']}
üìä –°—Ç–∞—Ç—É—Å: {obj_info['status']}
üíæ –û–±—Ä–∞–±–æ—Ç–∞–Ω: {"–î–∞" if is_processed else "–ù–µ—Ç"}
---"""
            responses.append(response)
        else:
            responses.append(f"‚ùå –û–±—ä–µ–∫—Ç #{object_id} –Ω–µ –Ω–∞–π–¥–µ–Ω\n---")
    
    final_response = "\n".join(responses)
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text=final_response,
        reply_markup=create_main_keyboard()
    )

@bot.message_handler(commands=['upload'])
def ask_upload_object(message):
    msg = send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text="üì§ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:",
        reply_markup=create_main_keyboard()
    )
    bot.register_next_step_handler(msg, process_upload_object)

def process_upload_object(message):
    if message.text.startswith('/'):
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞, –∞ –Ω–µ –∫–æ–º–∞–Ω–¥—É",
            reply_markup=create_main_keyboard()
        )
        return
        
    object_id = message.text.strip()
    obj_info = objects_data.get(object_id)
    
    if not obj_info:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text=f"‚ùå –û–±—ä–µ–∫—Ç #{object_id} –Ω–µ –Ω–∞–π–¥–µ–Ω",
            reply_markup=create_main_keyboard()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ user_id –∏ –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–º—ã
    user_id = message.from_user.id
    user_state[user_id] = {
        'object_id': object_id,
        'chat_id': message.chat.id,
        'message_thread_id': message.message_thread_id,
        'files': [],
        'file_types': {'photos': 0, 'documents': 0, 'videos': 0},
        'last_file_count': 0
    }
    
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text=f"""
üìé –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ #{object_id}

–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–∞–π–ª—ã (—Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–∏–¥–µ–æ).
–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ /done
–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel

‚úÖ –§–∞–π–ª—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
        """.strip(),
        reply_markup=create_upload_keyboard()
    )

@bot.message_handler(commands=['cancel'])
def cancel_upload(message):
    user_id = message.from_user.id
    if user_id in user_state:
        object_id = user_state[user_id]['object_id']
        chat_id = user_state[user_id]['chat_id']
        message_thread_id = user_state[user_id].get('message_thread_id')
        
        del user_state[user_id]
        send_message_with_topic(
            chat_id=chat_id,
            message_thread_id=message_thread_id,
            text=f"‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ #{object_id} –æ—Ç–º–µ–Ω–µ–Ω–∞", 
            reply_markup=create_main_keyboard()
        )

@bot.message_handler(content_types=['photo', 'document', 'video'])
def handle_files(message):
    user_id = message.from_user.id
    
    if user_id not in user_state:
        return
    
    object_id = user_state[user_id]['object_id']
    files = user_state[user_id]['files']
    file_types = user_state[user_id]['file_types']
    
    file_info = {}
    
    if message.photo:
        file_id = message.photo[-1].file_id
        file_info = {'type': 'photo', 'file_id': file_id}
        file_types['photos'] += 1
    elif message.document:
        file_id = message.document.file_id
        file_info = {'type': 'document', 'file_id': file_id, 'name': message.document.file_name}
        file_types['documents'] += 1
    elif message.video:
        file_id = message.video.file_id
        file_info = {'type': 'video', 'file_id': file_id}
        file_types['videos'] += 1
    
    files.append(file_info)
    user_state[user_id]['last_file_count'] = len(files)

@bot.message_handler(commands=['done'])
def finish_upload(message):
    user_id = message.from_user.id
    
    if user_id not in user_state:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤", 
            reply_markup=create_main_keyboard()
        )
        return
    
    object_id = user_state[user_id]['object_id']
    chat_id = user_state[user_id]['chat_id']
    message_thread_id = user_state[user_id].get('message_thread_id')
    files = user_state[user_id]['files']
    file_types = user_state[user_id]['file_types']
    
    if not files:
        send_message_with_topic(
            chat_id=chat_id,
            message_thread_id=message_thread_id,
            text="‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞", 
            reply_markup=create_main_keyboard()
        )
        del user_state[user_id]
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—ä–µ–∫—Ç–∞
    object_files[object_id] = files
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∞—Ä—Ö–∏–≤ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è + –≤—Å–µ —Ñ–∞–π–ª—ã)
    save_to_archive(object_id, files, file_types)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º Google Sheets
    update_google_sheets(object_id)
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    del user_state[user_id]
    
    send_message_with_topic(
        chat_id=chat_id,
        message_thread_id=message_thread_id,
        text=f"""
‚úÖ –£–°–ü–ï–•!

üìÅ –î–ª—è –æ–±—ä–µ–∫—Ç–∞ #{object_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:
üì∏ –§–æ—Ç–æ: {file_types['photos']}
üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: {file_types['documents']}  
üé• –í–∏–¥–µ–æ: {file_types['videos']}
üìä –í—Å–µ–≥–æ: {len(files)} —Ñ–∞–π–ª–æ–≤

üíæ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –∞—Ä—Ö–∏–≤
üìà –û–±—ä–µ–∫—Ç –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
        """.strip(),
        reply_markup=create_main_keyboard()
    )

@bot.message_handler(commands=['download'])
def handle_download(message):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /download –±–µ–∑ –Ω–æ–º–µ—Ä–∞
    if len(message.text.split()) == 1:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="üì• –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤:",
            reply_markup=create_main_keyboard()
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /download —Å –Ω–æ–º–µ—Ä–æ–º
    try:
        object_id = message.text.split()[1]
        download_object_files(message, object_id)
    except IndexError:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞: /download 16",
            reply_markup=create_main_keyboard()
        )

def download_object_files(message, object_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Ç—É –∂–µ —Ç–µ–º—É"""
    if object_id not in object_files:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text=f"‚ùå –î–ª—è –æ–±—ä–µ–∫—Ç–∞ #{object_id} –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤",
            reply_markup=create_main_keyboard()
        )
        return
    
    files = object_files[object_id]
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text=f"üìÅ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª—ã –æ–±—ä–µ–∫—Ç–∞ #{object_id}...",
        reply_markup=create_main_keyboard()
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Ç—É –∂–µ —Ç–µ–º—É
    sent_count = 0
    for file_info in files:
        try:
            if file_info['type'] == 'photo':
                send_photo_with_topic(
                    chat_id=message.chat.id,
                    message_thread_id=message.message_thread_id,
                    photo=file_info['file_id']
                )
            elif file_info['type'] == 'document':
                send_document_with_topic(
                    chat_id=message.chat.id,
                    message_thread_id=message.message_thread_id,
                    document=file_info['file_id']
                )
            elif file_info['type'] == 'video':
                send_video_with_topic(
                    chat_id=message.chat.id,
                    message_thread_id=message.message_thread_id,
                    video=file_info['file_id']
                )
            sent_count += 1
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {e}")
    
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text=f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} —Ñ–∞–π–ª–æ–≤ –∏–∑ {len(files)}",
        reply_markup=create_main_keyboard()
    )

@bot.message_handler(commands=['processed'])
def show_processed_objects(message):
    if not object_files:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="üì≠ –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤",
            reply_markup=create_main_keyboard()
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤
    keyboard = create_processed_keyboard()
    
    response = f"""
üìä –û–ë–†–ê–ë–û–¢–ê–ù–ù–´–ï –û–ë–™–ï–ö–¢–´:

–í—Å–µ–≥–æ: {len(object_files)} –æ–±—ä–µ–∫—Ç–æ–≤

üëá –í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤:
    """
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text=response.strip(),
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (—Ñ–æ—Ä–º–∞—Ç: "üìÅ #16")
@bot.message_handler(func=lambda message: message.text.startswith('üìÅ #'))
def handle_download_button(message):
    try:
        object_id = message.text.replace('üìÅ #', '').strip()
        download_object_files(message, object_id)
    except Exception as e:
        send_message_with_topic(
            chat_id=message.chat.id,
            message_thread_id=message.message_thread_id,
            text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—ä–µ–∫—Ç–∞",
            reply_markup=create_main_keyboard()
        )

@bot.message_handler(func=lambda message: True)
def handle_other_messages(message):
    if not message.text.startswith('/'):
        return
    send_message_with_topic(
        chat_id=message.chat.id,
        message_thread_id=message.message_thread_id,
        text="‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥",
        reply_markup=create_main_keyboard()
    )

# ========== WEBHOOK ==========
@app.route('/' + TOKEN, methods=['POST'])
def receive_update():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

@app.route('/')
def index():
    return "ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏ –ò–ü–£–ì —Ä–∞–±–æ—Ç–∞–µ—Ç! ‚úÖ", 200

if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    objects_data = load_objects_from_excel()
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(objects_data)}")
    
    sheets_client = init_google_sheets()
    if sheets_client:
        print("‚úÖ Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    bot.remove_webhook()
    WEBHOOK_URL = f"https://telegram-bot-b6pn.onrender.com/{TOKEN}"
    bot.set_webhook(url=WEBHOOK_URL)
    print(f"üåê Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
